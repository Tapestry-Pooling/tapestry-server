name: Build and Deploy

on:
  push:
    branches: [ master ]

env:
  DJANGO_ENV: prod
  DEBUG: False
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  POOLING_SCHEME_BUCKET: pooling_scheme_files_prod
  POOLING_RESULT_BUCKET: pooling_results_prod
  KIRKMAN_MATRIX_BUCKET: kirkman_matrices_prod
  RESULT_REPORT_BUCKET: admin_results_report_prod
  POOLING_FUNCTION_URL: https://us-central1-tapestry-pooling-f9f8e.cloudfunctions.net/generatePoolingMatrix

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Subtitute enviornment vars in app.yaml
      run: |
        echo "$(envsubst < app.yaml)" > app.yaml
      env:
        DJANGO_ENV: prod
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        CLOUD_SQL_INSTANCE: ${{ secrets.CLOUD_SQL_INSTANCE }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
    - name: Decrypt service account secret
      run: |
        mkdir secrets
        gpg --quiet --batch --yes --decrypt --passphrase="$CLOUD_STORAGE_SECRET" \
        --output secrets/tapestry-pooling-cloud-storage-credentials.json \
        tapestry-pooling-cloud-storage-credentials.json.gpg
      env:
        CLOUD_STORAGE_SECRET: ${{ secrets.CLOUD_STORAGE_SECRET }}
    # get the IP address of hosted-runner
    - name: Public IP
      id: ip
      uses: haythem/public-ip@v1
    #Setup and configure gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        project_id: ${{ secrets.PROJECT_ID }}
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
    # whitelist the hosted-runner IP address
    - name: Whitelist IP
      run: |
        gcloud sql instances patch postgres --authorized-networks=${{ steps.ip.outputs.ipv4 }}
    # run migrations
    - name: Run migrations and collect static files
      run: |
        python manage.py migrate
        python manage.py collectstatic --noinput
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: 5432
        GOOGLE_APPLICATION_CREDENTIALS: secrets/tapestry-pooling-cloud-storage-credentials.json
    # clear Whitelist
    - name: Clear Whitelist
      run: |
        gcloud sql instances patch postgres --clear-authorized-networks
    # Deploy App to App Engine
    - name: Deploy
      run: |
        gcloud app deploy --quiet